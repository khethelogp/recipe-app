{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","map","ingredient","text","toFixed","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAyBeA,EAtBA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OAEQ,sBAAKC,UAAWC,IAAMC,OAAtB,UAEI,qBAAKC,IAAKL,EAAOM,IAAI,WAErB,oBAAIJ,UAAU,QAAd,SAAuBJ,IAEvB,6BACKG,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAIxB,2CAAcV,EAASW,QAAQ,UC8ChCC,G,MA5DH,WACV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAkBhB,OACE,qBAAKxB,UAAU,MAAf,SACE,kCACI,sBAAKA,UAAU,YAAf,UAEE,oBAAIA,UAAU,QAAd,wBAEA,uBAAM2B,SAdE,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAWyBd,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOlB,EAAQmB,SAnBhD,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,QAkBwEG,YAAY,+BAE7F,wBAAQJ,KAAK,SAAb,uBAGF,qBAAK9B,UAAU,UAAf,SACKW,EAAQN,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAOiC,MACrBtC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOiC,qBCtCtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.1b219c9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return(\r\n        \r\n            <div className={style.recipe}>\r\n                \r\n                <img src={image} alt=\"recipe\" />\r\n\r\n                <h1 className=\"title\">{title}</h1>\r\n                \r\n                <ol>\r\n                    {ingredients.map(ingredient =>(\r\n                        <li>{ingredient.text}</li>\r\n                    ))}\r\n                </ol>\r\n\r\n                <p>Calories: {calories.toFixed(2)}</p>\r\n                        \r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\r\nimport Recipe from './Recipe'\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const APP_ID = \"67a56e3a\";\r\n  const APP_KEY = \"3c048306d0ecb9ed1afe441f2cc80897\";\r\n  \r\n  const [recipes, setRecipes] = useState([]); \r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('chicken');\r\n\r\n  useEffect(()=>{\r\n    getRecipes();\r\n  },[query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n  };\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <section>\r\n          <div className=\"container\">\r\n            \r\n            <h1 className=\"brand\">Recipe App</h1>\r\n            \r\n            <form onSubmit={getSearch} className=\"search-form\">\r\n              <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search for any food recipe\"/> \r\n\r\n              <button type=\"submit\">Search</button>   \r\n            </form>\r\n            \r\n            <div className=\"recipes\">\r\n                {recipes.map(recipe => (\r\n                  <Recipe\r\n                  key={recipe.recipe.label} \r\n                  title={recipe.recipe.label} \r\n                  calories={recipe.recipe.calories} \r\n                  image={recipe.recipe.image}\r\n                  ingredients={recipe.recipe.ingredients}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3ZMKD\"};"],"sourceRoot":""}